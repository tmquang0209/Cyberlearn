import java.util.ArrayList;

public class TruongHoc implements NhapXuat {

	final short NAM_HIEN_TAI = 2021;
	final short SO_MON_HOC = 3;

	// 1 Attributes
	private DanhSachToanTruong objToanTruong;

	// 2 Get,set
	public DanhSachToanTruong getObjToanTruong() {
		return objToanTruong;
	}

	public void setObjToanTruong(DanhSachToanTruong objToanTruong) {
		this.objToanTruong = objToanTruong;
	}

	// 3 Constructor
	public TruongHoc() {

	}

	// 4 Input,output
	@Override
	public void nhap() {

	}

	@Override
	public void xuat() {
		// TODO Auto-generated method stub

	}

	public void xuatToanTruong() {
		objToanTruong.xuat();
	}

	public void taoDuLieu() {
		this.objToanTruong = new DanhSachToanTruong();
		objToanTruong.taoDuLieu();
	}

	// 5 Business method
	public void tinhThamNienGV() {
		System.out.println("Danh sách thâm niên GV");
		for (ToanTruong tt : objToanTruong.getDsToanTruong()) {
			if (tt instanceof GiaoVien) {
				float thamNien = tinhThamNien(tt);
				System.out.println("Họ tên: " + tt.getHoTen() + "\t Thâm niên: " + thamNien);
			}
		}
		System.out.println("=============================");
	}

	private float tinhThamNien(ToanTruong tt) {
		float thamNien = NAM_HIEN_TAI - Float.parseFloat(((GiaoVien) tt).getNamBatDauDay());
		return thamNien;
	}

	private GiaoVien timGVCoThamNienCaoNhat() {
		GiaoVien gvThamNienCaoNhat = new GiaoVien();
		gvThamNienCaoNhat = listTeacher().get(0);
		for (int i = 0; i < listTeacher().size(); i++) {
			GiaoVien gv = listTeacher().get(i);
			if (tinhThamNien(gv) > tinhThamNien(gvThamNienCaoNhat)) {
				gvThamNienCaoNhat = (GiaoVien) gv;
			}
		}
		return gvThamNienCaoNhat;
	}

	public void xuatGVThamNienCaoNhat() {
		GiaoVien gvTNCaoNhat = timGVCoThamNienCaoNhat();

		System.out.println("Danh sách GV có thâm niên cao nhất");
		for (GiaoVien tt : listTeacher()) {
			if (tinhThamNien(tt) == tinhThamNien(gvTNCaoNhat)) {
				tt.xuat();
			}
		}
		System.out.println("===================================");
	}

	public void timGVTMYeuCau() {
		System.out.println("Danh sách GV có thâm niên > 5 và ban Tự nhiên");
		for (GiaoVien gv : listTeacher()) {
			if (tinhThamNien(gv) > 5 && gv.getChuyenMon() == 1) {
				gv.xuat();
			}
		}
		System.out.println("==============================");
	}

	private float tinhDiemTBHS(HocSinh hs) {
		return (hs.getDiemToan() + hs.getDiemAnh() + hs.getDiemVan()) / SO_MON_HOC;
	}

	public void xuatDiemTBHS() {
		System.out.println("******************************");
		for (HocSinh hs : listStudent()) {
			System.out.println("Tên HS: " + hs.hoTen + "\t Điểm TB: " + tinhDiemTBHS(hs));
		}
		System.out.println("===============================");
	}
	
	private HocSinh timHSCoDiemTBCaoNhat() {
		
		return hsTBCaoNhat;
	}
	
	public void xuatHSCoDTBCaoNhat() {
		HocSinh hsTBCaoNhat = new HocSinh();
		hsTBCaoNhat = listStudent().get(0);
		int indexMax = 0;
		for(int i = 1; i < listStudent().size();i++) {
			HocSinh hs = listStudent().get(i);
			if(tinhDiemTBHS(hs) > tinhDiemTBHS(hsTBCaoNhat)) {
				hsTBCaoNhat = hs;
				indexMax++;
			}
		}
		
		for()
	}

	private ArrayList<GiaoVien> listTeacher() {
		ArrayList listTeacher = new ArrayList<GiaoVien>();
		for (ToanTruong tt : objToanTruong.getDsToanTruong()) {
			if (tt instanceof GiaoVien) {
				listTeacher.add(tt);
			}
		}
		return listTeacher;
	}

	private ArrayList<HocSinh> listStudent() {
		ArrayList listStudent = new ArrayList<HocSinh>();
		for (ToanTruong tt : objToanTruong.getDsToanTruong()) {
			if (tt instanceof HocSinh) {
				listStudent.add(tt);
			}
		}
		return listStudent;
	}

}
